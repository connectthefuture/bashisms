#!/usr/bin/env bash

if [[ -z "$1" ]] || ( [[ "$1" != "--hard" ]] && [[ "$1" != "--soft" ]] ); then
  echo "lite_me_up: redeploy cf + diego to bosh-lite"
  echo "usage: lite_me_up --soft to simply perform a deploy"
  echo "usage: lite_me_up --hard to nuke the bosh-lite vm and start from scratch";
  echo "usage: lite_me_up --soft/hard --update to pull the latest diego-release and cf-release"
  exit 1
fi

if [[ "$2" != "--update" ]]; then
  echo "**** WILL NOT PULL REPOS! ****"
  echo "pass --update to pull"
fi

for DIR in $HOME/workspace/bosh-lite $HOME/workspace/cf-release $HOME/workspace/diego-release $HOME/workspace/concourse $HOME/workspace/bosh-manifests; do
  if [[ ! -d $DIR ]] ; then
    echo "You must clone $DIR"
    exit 1
  fi
done

echo "Need sudo password"
sudo echo "Got sudo password"

touch $HOME/.bosh_warden_config

if [[ "$1" == "--hard" ]]; then
  read -p "Will nuke bosh-lite's vm -- are you sure? " -n 1
  echo
  if [[ ! $REPLY =~ ^[Yy]$ ]];then
    exit 1
  fi  

  pushd ~/workspace/bosh-lite
    echo "Bumping bosh-lite"
    git pull
    
    echo "Destroying BOSH-lite VM"
    vagrant destroy -f
    echo "Updating the Vagrant Box"
    vagrant box update
    echo "Bringing up BOSH-lite VM"
    VM_MEMORY=8192 VM_CORES=4 vagrant up
  popd
fi

pushd ~/workspace/bosh-lite
  echo "Targetting the director"
  BUNDLE_GEMFILE=$HOME/.bashisms/bosh.Gemfile bundle exec bosh -c $HOME/.bosh_warden_config target 192.168.50.4 lite
  BUNDLE_GEMFILE=$HOME/.bashisms/bosh.Gemfile bundle exec bosh -c $HOME/.bosh_warden_config -t 192.168.50.4 login admin admin
  echo "Adding routes"
  ./bin/add-route

  if [[ ! -a bosh-stemcell-17-warden-boshlite-ubuntu-trusty-go_agent.tgz ]]; then
    echo "Fetching trusty stemcell"
    BUNDLE_GEMFILE=$HOME/.bashisms/bosh.Gemfile bundle exec bosh -c $HOME/.bosh_warden_config -t 192.168.50.4 download public stemcell bosh-stemcell-17-warden-boshlite-ubuntu-trusty-go_agent.tgz
  fi

  echo "Uploading trusty stemcell"
  BUNDLE_GEMFILE=$HOME/.bashisms/bosh.Gemfile bundle exec bosh -c $HOME/.bosh_warden_config -t 192.168.50.4  upload stemcell bosh-stemcell-17-warden-boshlite-ubuntu-trusty-go_agent.tgz
popd

echo "Generating warden stub"
mkdir -p ~/workspace/deployments/warden
printf "director_uuid: %s" $(BUNDLE_GEMFILE=$HOME/.bashisms/bosh.Gemfile bundle exec bosh -c $HOME/.bosh_warden_config status --uuid) > ~/workspace/deployments/warden/director.yml

pushd ~/workspace/cf-release
  if [[ "$2" == "--update" ]]; then
    echo "Updating CF-Release"
    git checkout runtime-passed
    ./update
  fi

  echo "Generating CF-Release's manifest"
  ./generate_deployment_manifest warden \
      ~/workspace/deployments/warden/director.yml \
      ~/workspace/diego-release/stubs-for-cf-release/enable_consul_with_cf.yml \
      ~/workspace/diego-release/stubs-for-cf-release/enable_diego_ssh_in_cc.yml \
      > ~/workspace/deployments/warden/cf.yml

  echo "Syncing Blobs"
  BUNDLE_GEMFILE=$HOME/.bashisms/bosh.Gemfile bundle exec bosh -c $HOME/.bosh_warden_config -t 192.168.50.4 -d ~/workspace/deployments/warden/cf.yml --parallel 4 sync blobs

  echo "Creating CF-Release"
  BUNDLE_GEMFILE=$HOME/.bashisms/bosh.Gemfile bundle exec bosh -c $HOME/.bosh_warden_config -t 192.168.50.4 -d ~/workspace/deployments/warden/cf.yml create release --force

  echo "Uploading CF-Release"
  BUNDLE_GEMFILE=$HOME/.bashisms/bosh.Gemfile bundle exec bosh -c $HOME/.bosh_warden_config -t 192.168.50.4 -d ~/workspace/deployments/warden/cf.yml -n upload release

  echo "Deploying CF-Release"
  BUNDLE_GEMFILE=$HOME/.bashisms/bosh.Gemfile bundle exec bosh -c $HOME/.bosh_warden_config -t 192.168.50.4 -d ~/workspace/deployments/warden/cf.yml -n deploy
popd

pushd ~/workspace/diego-release
  if [[ "$2" == "--update" ]]; then
    echo "Updating Diego-Release"
    git checkout develop
    ./scripts/update
  fi

  echo "Generating Diego-Release's manifest"

  spiff merge ~/workspace/deployments/bosh-lite-stub.yml \
   ./manifest-generation/bosh-lite-stubs/property-overrides.yml \
   > ~/workspace/deployments/property-overrides.yml

  ./scripts/generate-deployment-manifest \
    ~/workspace/deployments/warden/director.yml \
    manifest-generation/bosh-lite-stubs/property-overrides.yml \
    manifest-generation/bosh-lite-stubs/instance-count-overrides.yml \
    manifest-generation/bosh-lite-stubs/persistent-disk-overrides.yml \
    manifest-generation/bosh-lite-stubs/iaas-settings.yml \
    manifest-generation/bosh-lite-stubs/additional-jobs.yml \
    ~/workspace/deployments/warden \
    > ~/workspace/deployments/warden/diego.yml

  echo "Uploading Garden-Linux-Release"
  BUNDLE_GEMFILE=$HOME/.bashisms/bosh.Gemfile bundle exec bosh -c $HOME/.bosh_warden_config -t 192.168.50.4 -d ~/workspace/deployments/warden/diego.yml upload release https://bosh.io/d/github.com/cloudfoundry-incubator/garden-linux-release

  echo "Syncing Blobs"
  BUNDLE_GEMFILE=$HOME/.bashisms/bosh.Gemfile bundle exec bosh -c $HOME/.bosh_warden_config -t 192.168.50.4 -d ~/workspace/deployments/warden/diego.yml --parallel 4 sync blobs

  echo "Creating Diego-Release"
  BUNDLE_GEMFILE=$HOME/.bashisms/bosh.Gemfile bundle exec bosh -c $HOME/.bosh_warden_config -t 192.168.50.4 -d ~/workspace/deployments/warden/diego.yml create release --force

  echo "Uploading Diego-Release"
  BUNDLE_GEMFILE=$HOME/.bashisms/bosh.Gemfile bundle exec bosh -c $HOME/.bosh_warden_config -t 192.168.50.4 -d ~/workspace/deployments/warden/diego.yml -n upload release

  echo "Deploying Diego-Release"
  BUNDLE_GEMFILE=$HOME/.bashisms/bosh.Gemfile bundle exec bosh -c $HOME/.bosh_warden_config -t 192.168.50.4 -d ~/workspace/deployments/warden/diego.yml -n deploy
popd

read -p "Done.  Do you want to setup bosh cache?  This will target warden globally. " -n 1
echo
if [[ ! $REPLY =~ ^[Yy]$ ]];then
  exit 1
fi

echo "Setting up bosh cache"
bosh_target warden --refresh
